filter {
  if [type] == "cyderes" {
    mutate {
      # Replace non-standard whitespace characters with a standard space
      gsub => ["message", "[\u00A0\u1680\u2000-\u200A\u202F\u205F\u3000]", " "]
    }

    grok {
      match => { "message" => "<%{POSINT:priority}>%{NUMBER:version} %{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:hostname} %{WORD:program} %{POSINT:pid} - - alertname=\"%{DATA:description}\" computername=\"%{HOSTNAME:computername}\" computerip=\"%{IP:source_ip}\" severity=\"%{INT:severity}\"" }
    }

    mutate {
      convert => { "severity" => "integer" }
    }

    if [severity] == 1 {
      mutate {
        replace => { "severity" => "High" }
      }
    } else if [severity] == 2 {
      mutate {
        replace => { "severity" => "Medium" }
      }
    } else if [severity] == 3 {
      mutate {
        replace => { "severity" => "Low" }
      }
    }

    # Convert the message field to a JSON string using the ruby filter
    ruby {
      code => "event.set('json_message', event.get('message').to_json)"
    }
  }
}
